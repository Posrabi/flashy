syntax = "proto3";

package users.proto;

import "google/api/annotations.proto";

option go_package = "github.com/Posrabi/flashy/protos/users";

service UsersAPI {

  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse) {
    // might need this if REST is required, for now, it does not provide any benefits.
    option (google.api.http) = {
      post: "/user/create",
      body: "*"
    };
  }

  rpc GetUser(GetUserRequest) returns (GetUserResponse) {
    option (google.api.http) = {
      get: "/user/get/{user_name}"
      body: "*"
    };
  }

  rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse) {
    option (google.api.http) = {
      post: "/user/update",
      body: "*"
    };
  }

  rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse) {
    option (google.api.http) = {
      post: "/user/delete",
      body: "*"
    };
  }

  rpc LogIn(LogInRequest) returns (LogInResponse) {
    option (google.api.http) = {
      post: "/user/login",
      body: "*"
    };
  }

  rpc LogOut(LogOutRequest) returns (LogOutResponse) {
    option (google.api.http) = {
      post: "/users/logout",
      body: "*"
    };
  }

}

message User {
  string user_name = 1;
  string hash_password = 2;
  string name = 3;
  string email = 4;
  string phone_number = 5;
  string auth_token = 6;
  string user_id = 7;
}

message CreateUserRequest {
  User user = 1;
}

message CreateUserResponse {
  User user = 1;
}

message GetUserRequest {
  string user_id = 1;
}

message GetUserResponse {
  User user = 1;
}

message UpdateUserRequest {
  User user = 1;
  string user_name = 2;
  string hash_password = 3;
}

message UpdateUserResponse {
  string response = 1;
}

message DeleteUserRequest {
  string user_id = 1;
  string hash_password = 2;
}

message DeleteUserResponse {
  string response = 1;
}

message LogInRequest {
  string user_name = 1;
  string hash_password = 2;
}

message LogInResponse {
  User user = 1;
}

message LogOutRequest {
  string user_id = 2;
}

message LogOutResponse {
  string response = 1;
}
